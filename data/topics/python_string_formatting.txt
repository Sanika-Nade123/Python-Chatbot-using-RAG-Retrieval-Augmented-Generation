String formatting in Python offers multiple approaches. The % operator provides C-style formatting but is considered legacy.

The str.format() method uses {} placeholders. It supports positional and keyword arguments for flexible formatting.

F-strings (formatted string literals) provide the most readable syntax. They allow direct embedding of Python expressions.

Format specifiers control alignment, padding, and precision. The : operator introduces format specifications.

Format mini-language includes type specifiers for different data types. Common specifiers include d for integers, f for floats.

Custom format specifications work with __format__() method. This enables formatting of custom objects.