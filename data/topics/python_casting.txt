Type casting converts values between different data types. Built-in functions like int(), float(), str() perform explicit type conversion.

Implicit type conversion (coercion) happens automatically in certain operations. Python converts types to maintain operation compatibility.

String conversion uses str() for human-readable representation and repr() for detailed object representation.

Numeric type conversion follows precision rules. Converting to integer truncates decimal parts rather than rounding.

Boolean casting considers empty sequences, zero, and None as False. All other values convert to True.

Custom classes can define __int__(), __float__(), and __str__() methods to control type conversion behavior.